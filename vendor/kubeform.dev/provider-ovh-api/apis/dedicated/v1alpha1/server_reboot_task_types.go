/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ServerRebootTask struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServerRebootTaskSpec   `json:"spec,omitempty"`
	Status            ServerRebootTaskStatus `json:"status,omitempty"`
}

type ServerRebootTaskSpec struct {
	State *ServerRebootTaskSpecResource `json:"state,omitempty" tf:"-"`

	Resource ServerRebootTaskSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ServerRebootTaskSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Details of this task
	// +optional
	Comment *string `json:"comment,omitempty" tf:"comment"`
	// Completion date
	// +optional
	DoneDate *string `json:"doneDate,omitempty" tf:"done_date"`
	// Function name
	// +optional
	Function *string `json:"function,omitempty" tf:"function"`
	// Change this value to recreate a reboot task.
	Keepers []string `json:"keepers" tf:"keepers"`
	// Last update
	// +optional
	LastUpdate *string `json:"lastUpdate,omitempty" tf:"last_update"`
	// The internal name of your dedicated server.
	ServiceName *string `json:"serviceName" tf:"service_name"`
	// Task Creation date
	// +optional
	StartDate *string `json:"startDate,omitempty" tf:"start_date"`
	// Task status
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
}

type ServerRebootTaskStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ServerRebootTaskList is a list of ServerRebootTasks
type ServerRebootTaskList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ServerRebootTask CRD objects
	Items []ServerRebootTask `json:"items,omitempty"`
}
