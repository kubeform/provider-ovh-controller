/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type InstallationTemplate struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstallationTemplateSpec   `json:"spec,omitempty"`
	Status            InstallationTemplateStatus `json:"status,omitempty"`
}

type InstallationTemplateSpecCustomization struct {
	// Template change log details
	// +optional
	// Deprecated
	ChangeLog *string `json:"changeLog,omitempty" tf:"change_log"`
	// Set up the server using the provided hostname instead of the default hostname
	// +optional
	CustomHostname *string `json:"customHostname,omitempty" tf:"custom_hostname"`
	// Indicate the URL where your postinstall customisation script is located
	// +optional
	PostInstallationScriptLink *string `json:"postInstallationScriptLink,omitempty" tf:"post_installation_script_link"`
	// indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'
	// +optional
	PostInstallationScriptReturn *string `json:"postInstallationScriptReturn,omitempty" tf:"post_installation_script_return"`
	// +optional
	// Deprecated
	Rating *int64 `json:"rating,omitempty" tf:"rating"`
	// Name of the ssh key that should be installed. Password login will be disabled
	// +optional
	SshKeyName *string `json:"sshKeyName,omitempty" tf:"ssh_key_name"`
	// Use the distribution's native kernel instead of the recommended OVH Kernel
	// +optional
	UseDistributionKernel *bool `json:"useDistributionKernel,omitempty" tf:"use_distribution_kernel"`
}

type InstallationTemplateSpec struct {
	State *InstallationTemplateSpecResource `json:"state,omitempty" tf:"-"`

	Resource InstallationTemplateSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type InstallationTemplateSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// List of all language available for this template
	// +optional
	AvailableLanguages []string `json:"availableLanguages,omitempty" tf:"available_languages"`
	// OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
	BaseTemplateName *string `json:"baseTemplateName" tf:"base_template_name"`
	// This distribution is new and, although tested and functional, may still display odd behaviour
	// +optional
	Beta *bool `json:"beta,omitempty" tf:"beta"`
	// This template bit format (32 or 64)
	// +optional
	BitFormat *int64 `json:"bitFormat,omitempty" tf:"bit_format"`
	// Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)
	// +optional
	Category *string `json:"category,omitempty" tf:"category"`
	// +optional
	Customization *InstallationTemplateSpecCustomization `json:"customization,omitempty" tf:"customization"`
	// The default language of this template
	DefaultLanguage *string `json:"defaultLanguage" tf:"default_language"`
	// is this distribution deprecated
	// +optional
	Deprecated *bool `json:"deprecated,omitempty" tf:"deprecated"`
	// information about this template
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// the distribution this template is based on
	// +optional
	Distribution *string `json:"distribution,omitempty" tf:"distribution"`
	// this template family type (bsd,linux,solaris,windows)
	// +optional
	Family *string `json:"family,omitempty" tf:"family"`
	// Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)
	// +optional
	Filesystems []string `json:"filesystems,omitempty" tf:"filesystems"`
	// This distribution supports hardware raid configuration through the OVH API
	// +optional
	HardRaidConfiguration *bool `json:"hardRaidConfiguration,omitempty" tf:"hard_raid_configuration"`
	// Date of last modification of the base image
	// +optional
	LastModification *string `json:"lastModification,omitempty" tf:"last_modification"`
	// This distribution supports Logical Volumes (Linux LVM)
	// +optional
	LvmReady *bool `json:"lvmReady,omitempty" tf:"lvm_ready"`
	// Remove default partition schemes at creation
	// +optional
	RemoveDefaultPartitionSchemes *bool `json:"removeDefaultPartitionSchemes,omitempty" tf:"remove_default_partition_schemes"`
	// This distribution supports installation using the distribution's native kernel instead of the recommended OVH kernel
	// +optional
	SupportsDistributionKernel *bool `json:"supportsDistributionKernel,omitempty" tf:"supports_distribution_kernel"`
	// This distribution supports the GUID Partition Table (GPT), providing up to 128 partitions that can have more than 2TB
	// +optional
	SupportsGptLabel *bool `json:"supportsGptLabel,omitempty" tf:"supports_gpt_label"`
	// This distribution supports RTM software
	// +optional
	SupportsRtm *bool `json:"supportsRtm,omitempty" tf:"supports_rtm"`
	// This distribution supports the microsoft SQL server
	// +optional
	SupportsSQLServer *bool `json:"supportsSQLServer,omitempty" tf:"supports_sql_server"`
	// This distribution supports UEFI setup (no,only,yes)
	// +optional
	SupportsUefi *string `json:"supportsUefi,omitempty" tf:"supports_uefi"`
	// This template name
	TemplateName *string `json:"templateName" tf:"template_name"`
}

type InstallationTemplateStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// InstallationTemplateList is a list of InstallationTemplates
type InstallationTemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of InstallationTemplate CRD objects
	Items []InstallationTemplate `json:"items,omitempty"`
}
