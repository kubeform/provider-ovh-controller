/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Iploadbalancing struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IploadbalancingSpec   `json:"spec,omitempty"`
	Status            IploadbalancingStatus `json:"status,omitempty"`
}

type IploadbalancingSpecOrderDetails struct {
	// description
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// expiration date
	// +optional
	Domain *string `json:"domain,omitempty" tf:"domain"`
	// order detail id
	// +optional
	OrderDetailID *int64 `json:"orderDetailID,omitempty" tf:"order_detail_id"`
	// quantity
	// +optional
	Quantity *string `json:"quantity,omitempty" tf:"quantity"`
}

type IploadbalancingSpecOrder struct {
	// date
	// +optional
	Date *string `json:"date,omitempty" tf:"date"`
	// Information about a Bill entry
	// +optional
	Details []IploadbalancingSpecOrderDetails `json:"details,omitempty" tf:"details"`
	// expiration date
	// +optional
	ExpirationDate *string `json:"expirationDate,omitempty" tf:"expiration_date"`
	// order id
	// +optional
	OrderID *int64 `json:"orderID,omitempty" tf:"order_id"`
}

type IploadbalancingSpecOrderableZone struct {
	// The zone three letter code
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// The billing planCode for this zone
	// +optional
	PlanCode *string `json:"planCode,omitempty" tf:"plan_code"`
}

type IploadbalancingSpecPlanConfiguration struct {
	// Identifier of the resource
	Label *string `json:"label" tf:"label"`
	// Path to the resource in API.OVH.COM
	Value *string `json:"value" tf:"value"`
}

type IploadbalancingSpecPlan struct {
	// Catalog name
	// +optional
	CatalogName *string `json:"catalogName,omitempty" tf:"catalog_name"`
	// Representation of a configuration item for personalizing product
	// +optional
	Configuration []IploadbalancingSpecPlanConfiguration `json:"configuration,omitempty" tf:"configuration"`
	// duration
	Duration *string `json:"duration" tf:"duration"`
	// Plan code
	PlanCode *string `json:"planCode" tf:"plan_code"`
	// Pricing model identifier
	PricingMode *string `json:"pricingMode" tf:"pricing_mode"`
}

type IploadbalancingSpecPlanOptionConfiguration struct {
	// Identifier of the resource
	Label *string `json:"label" tf:"label"`
	// Path to the resource in API.OVH.COM
	Value *string `json:"value" tf:"value"`
}

type IploadbalancingSpecPlanOption struct {
	// Catalog name
	// +optional
	CatalogName *string `json:"catalogName,omitempty" tf:"catalog_name"`
	// Representation of a configuration item for personalizing product
	// +optional
	Configuration []IploadbalancingSpecPlanOptionConfiguration `json:"configuration,omitempty" tf:"configuration"`
	// duration
	Duration *string `json:"duration" tf:"duration"`
	// Plan code
	PlanCode *string `json:"planCode" tf:"plan_code"`
	// Pricing model identifier
	PricingMode *string `json:"pricingMode" tf:"pricing_mode"`
}

type IploadbalancingSpec struct {
	State *IploadbalancingSpecResource `json:"state,omitempty" tf:"-"`

	Resource IploadbalancingSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type IploadbalancingSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Set the name displayed in ManagerV6 for your iplb (max 50 chars)
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// Your IP load balancing
	// +optional
	IpLoadbalancing *string `json:"ipLoadbalancing,omitempty" tf:"ip_loadbalancing"`
	// The IPV4 associated to your IP load balancing
	// +optional
	Ipv4 *string `json:"ipv4,omitempty" tf:"ipv4"`
	// The IPV6 associated to your IP load balancing. DEPRECATED.
	// +optional
	Ipv6 *string `json:"ipv6,omitempty" tf:"ipv6"`
	// The metrics token associated with your IP load balancing
	// +optional
	MetricsToken *string `json:"-" sensitive:"true" tf:"metrics_token"`
	// The offer of your IP load balancing
	// +optional
	Offer *string `json:"offer,omitempty" tf:"offer"`
	// Details about an Order
	// +optional
	Order []IploadbalancingSpecOrder `json:"order,omitempty" tf:"order"`
	// Available additional zone for your Load Balancer
	// +optional
	OrderableZone []IploadbalancingSpecOrderableZone `json:"orderableZone,omitempty" tf:"orderable_zone"`
	// Ovh Subsidiary
	OvhSubsidiary *string `json:"ovhSubsidiary" tf:"ovh_subsidiary"`
	// Ovh payment mode
	PaymentMean *string `json:"paymentMean" tf:"payment_mean"`
	// Product Plan to order
	Plan *IploadbalancingSpecPlan `json:"plan" tf:"plan"`
	// Product Plan to order
	// +optional
	PlanOption []IploadbalancingSpecPlanOption `json:"planOption,omitempty" tf:"plan_option"`
	// The internal name of your IP load balancing
	// +optional
	ServiceName *string `json:"serviceName,omitempty" tf:"service_name"`
	// Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null.
	// +optional
	SslConfiguration *string `json:"sslConfiguration,omitempty" tf:"ssl_configuration"`
	// Current state of your IP
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// Vrack eligibility
	// +optional
	VrackEligibility *bool `json:"vrackEligibility,omitempty" tf:"vrack_eligibility"`
	// Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product
	// +optional
	VrackName *string `json:"vrackName,omitempty" tf:"vrack_name"`
	// Location where your service is
	// +optional
	Zone []string `json:"zone,omitempty" tf:"zone"`
}

type IploadbalancingStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// IploadbalancingList is a list of Iploadbalancings
type IploadbalancingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Iploadbalancing CRD objects
	Items []Iploadbalancing `json:"items,omitempty"`
}
